services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  test:
    build:
      context: ./api
      dockerfile: Dockerfile.test
    # Ensure tests use in-memory SQLite
    environment:
      FLASK_ENV: testing
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      PYTHONPATH: /app
      SQLALCHEMY_DATABASE_URI: "sqlite:///:memory:"
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "pytest", "--disable-warnings", "-v"]

  api:
    build: ./api
    ports:
      - "5001:5000"
    environment:
      FLASK_ENV: development
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    volumes:
      - ./api:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  web:
    build: ./web
    ports:
      - "8080:80"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    depends_on:
      - api

volumes:
  db_data:
    driver: local